#!/bin/bash
# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.

source $OPENSHIFT_GEAR_DIR/virtenv/bin/activate

# copy template exambookings.db to persistent OpenShift data dir if it's not there, or else run syncdb
if [ ! -f $OPENSHIFT_DATA_DIR/exambookings.db ]
then
    echo "Copying $OPENSHIFT_REPO_DIR/data/exambookings_template.db to $OPENSHIFT_DATA_DIR"
    cp "$OPENSHIFT_REPO_DIR"data/exambookings_template.db "$OPENSHIFT_DATA_DIR"exambookings.db
else
    echo "Executing 'python $OPENSHIFT_REPO_DIR/wsgi/BookingProj/manage.py syncdb --noinput'"
    python "$OPENSHIFT_REPO_DIR"wsgi/BookingProj/manage.py syncdb --noinput
fi

# copy secure_settings_safe_template.py to project-root/secure_settings.py if it's not there
if [ ! -f $OPENSHIFT_REPO_DIR/wsgi/BookingProj/secure_settings.py ]
then
    echo "Copying $OPENSHIFT_REPO_DIR/data/secure_settings_safe_template.py to $OPENSHIFT_REPO_DIR/wsgi/BookingProj/secure_settings.py"
    cp "$OPENSHIFT_REPO_DIR"data/secure_settings_safe_template.py "$OPENSHIFT_REPO_DIR"wsgi/BookingProj/secure_settings.py
fi

# copy persistent OpenShift data dir's secure_settings.py (if it's there) to project-root/secure_settings.py
if [ -f $OPENSHIFT_DATA_DIR/secure_settings.py ]
then
    echo "Copying persistent $OPENSHIFT_DATA_DIR/secure_settings.py to $OPENSHIFT_REPO_DIR/wsgi/BookingProj/secure_settings.py"
    cp "$OPENSHIFT_DATA_DIR"secure_settings.py "$OPENSHIFT_REPO_DIR"wsgi/BookingProj/secure_settings.py
fi

# runs manage.py collectstatic
echo "Executing 'python $OPENSHIFT_REPO_DIR/wsgi/BookingProj/manage.py collectstatic --noinput'"
python "$OPENSHIFT_REPO_DIR"wsgi/BookingProj/manage.py collectstatic --noinput
